name: terraform
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  plan-dev:
    # if: github.event_name == 'pull_request'
    uses: ./.github/workflows/terraform-reusable.yml
    secrets: inherit
    with:
      terraform_action: plan
      environment: dev
      aws_role: arn:aws:iam::123456789012:role/dummy-role

  apply-dev:
    needs: plan-dev
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    uses: ./.github/workflows/terraform-reusable.yml
    secrets: inherit
    with:
      terraform_action: apply
      environment: dev
      aws_role: arn:aws:iam::123456789012:role/dummy-role

  plan-stage:
    # if: github.event_name == 'pull_request'
    uses: ./.github/workflows/terraform-reusable.yml
    secrets: inherit
    with:
      terraform_action: plan
      environment: stage
      aws_role: arn:aws:iam::123456789012:role/dummy-role

  apply-stage:
    needs: [plan-stage, apply-dev]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    uses: ./.github/workflows/terraform-reusable.yml
    secrets: inherit
    with:
      terraform_action: apply
      environment: stage
      aws_role: arn:aws:iam::123456789012:role/dummy-role

  plan-prod:
    # if: github.event_name == 'pull_request'
    uses: ./.github/workflows/terraform-reusable.yml
    secrets: inherit
    with:
      terraform_action: plan
      environment: prod
      aws_role: arn:aws:iam::123456789012:role/dummy-role

  apply-prod:
    needs: [plan-prod, apply-stage]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    uses: ./.github/workflows/terraform-reusable.yml
    secrets: inherit
    with:
      terraform_action: apply
      environment: prod
      aws_role: arn:aws:iam::123456789012:role/dummy-role